package snmpByMe;


	
	import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.snmp4j.CommunityTarget;
	import org.snmp4j.PDU;
	import org.snmp4j.Snmp;
	import org.snmp4j.TransportMapping;
	import org.snmp4j.event.ResponseEvent;
	import org.snmp4j.event.ResponseListener;
	import org.snmp4j.mp.SnmpConstants;
	import org.snmp4j.smi.Integer32;
	import org.snmp4j.smi.OID;
	import org.snmp4j.smi.OctetString;
	import org.snmp4j.smi.UdpAddress;
	import org.snmp4j.smi.VariableBinding;
	import org.snmp4j.transport.DefaultUdpTransportMapping;

	public class SnmpGetAsc {
	  private static String  ipAddress  = "192.168.200.101";
	  private static String  port    = "161";
	  private static String  oidValue  = ".1.3.6.1.2.1.2.1.0.";  // ends with 0 for scalar object
	  private static int    snmpVersion  = SnmpConstants.version2c;
	  private static String  community  = "public";
	  public static void main(String[] args) throws Exception
	  {
	    System.out.println("SNMP GET Demo");
	    TransportMapping transport = new DefaultUdpTransportMapping();
	    transport.listen();
	    CommunityTarget target = new CommunityTarget();
	    target.setCommunity(new OctetString(community));
	    target.setVersion(snmpVersion);
	    target.setAddress(new UdpAddress(ipAddress + "/" + port));
	    target.setRetries(2);
	    target.setTimeout(1000);

	    // Create the PDU object
	    PDU pdu = new PDU();
	    pdu.add(new VariableBinding(new OID(oidValue)));
	    pdu.setType(PDU.GET);
	    pdu.setRequestID(new Integer32(1));

	    // Create Snmp object for sending data to Agent
	    Snmp snmp = new Snmp(transport);
	    ResponseListener listener = new ResponseListener() {
	    	public void onResponse(ResponseEvent response) {
	     System.out.println("----------> starts asynchronous parsing <------------");
//	    System.out.println(event.getResponse());
	    try {
//		     Process Agent Response
		    if (response != null)
		    {
		      System.out.println("Got Response from Agent");
		      PDU responsePDU = response.getResponse();
		
		      if (responsePDU != null)
		      {
		        int errorStatus = responsePDU.getErrorStatus();
		        int errorIndex = responsePDU.getErrorIndex();
		        String errorStatusText = responsePDU.getErrorStatusText();
		
		        if (errorStatus == PDU.noError)
		        {
		          System.out.println("Snmp Get Response = " + responsePDU.getVariableBindings());

			    	snmp.close();
		        }
		        else
		        {
		          System.out.println("Error: Request Failed");
		          System.out.println("Error Status = " + errorStatus);
		          System.out.println("Error Index = " + errorIndex);
		          System.out.println("Error Status Text = " + errorStatusText);
		        }
		      }
		      else
		      {
		        System.out.println("Error: Response PDU is null");
		      }
		    }
		    else
		    {
		      System.out.println("Error: Agent Timeout... ");
		    }
		    

	    	
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	    	}
	    };
	    
	    System.out.println("Sending Request to Agent...");
	    snmp.send(pdu, target,null,listener);
	    TimeUnit.SECONDS.sleep(2);

	  }
	}

	
	
	
	
	
	
	
	
	
	
//    ResponseEvent response = snmp.get(pdu, target);
//
//    // Process Agent Response
//    if (response != null)
//    {
//      System.out.println("Got Response from Agent");
//      PDU responsePDU = response.getResponse();
//
//      if (responsePDU != null)
//      {
//        int errorStatus = responsePDU.getErrorStatus();
//        int errorIndex = responsePDU.getErrorIndex();
//        String errorStatusText = responsePDU.getErrorStatusText();
//
//        if (errorStatus == PDU.noError)
//        {
//          System.out.println("Snmp Get Response = " + responsePDU.getVariableBindings());
//        }
//        else
//        {
//          System.out.println("Error: Request Failed");
//          System.out.println("Error Status = " + errorStatus);
//          System.out.println("Error Index = " + errorIndex);
//          System.out.println("Error Status Text = " + errorStatusText);
//        }
//      }
//      else
//      {
//        System.out.println("Error: Response PDU is null");
//      }
//    }
//    else
//    {
//      System.out.println("Error: Agent Timeout... ");
//    }
//    