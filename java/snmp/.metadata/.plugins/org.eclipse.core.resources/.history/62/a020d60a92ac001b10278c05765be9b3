package scheduler;

import java.io.IOException;

import org.snmp4j.CommunityTarget;
import org.snmp4j.PDU;
import org.snmp4j.Snmp;
import org.snmp4j.TransportMapping;
import org.snmp4j.event.ResponseEvent;
import org.snmp4j.event.ResponseListener;
import org.snmp4j.mp.SnmpConstants;
import org.snmp4j.smi.GenericAddress;
import org.snmp4j.smi.Integer32;
import org.snmp4j.smi.OID;
import org.snmp4j.smi.OctetString;
import org.snmp4j.smi.VariableBinding;
import org.snmp4j.transport.DefaultUdpTransportMapping;

public class SchedulerGetGetBuk {
	String [] ips= {"192.168.200.101","192.168.200.102","192.168.200.103","192.168.200.104","192.168.200.106"};
//	  OID [] oids= {new OID("1.3.6.1.2.1.2.2.1.1"),new OID("1.3.6.1.2.1.2.2.1.2"),new OID("1.3.6.1.2.1.2.2.1.4")};// if index, if descr, if mtu
	 final String [] oids= {"1.3.6.1.2.1.2.2.1.1","1.3.6.1.2.1.2.2.1.2","1.3.6.1.2.1.2.2.1.4"};
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	void initialize() {
	for(String ip : ips)
	createSesson(ip);
}

	private void createSesson(String ip) {
		 TransportMapping transport;
			
				try {
					transport = new DefaultUdpTransportMapping();
				
			
			    transport.listen();
			    final Snmp snmp = new Snmp(transport);
//			    snmp.listen();
			    CommunityTarget target = new CommunityTarget();
		   target.setCommunity(new OctetString("public"));
		   target.setAddress(GenericAddress.parse(ip+"/161")); // supply your own udp address and port
		   target.setRetries(2);
		   target.setTimeout(1500);
		   target.setVersion(SnmpConstants.version2c);

			  
			PDU pdu = new PDU();
			pdu.setType(PDU.GET);
			pdu.setRequestID(new Integer32(1));
			pdu.add(new VariableBinding(new OID("1.3.6.1.2.1.2.1.0")));
			//get next listener
			ResponseListener getNextListen= new ResponseListener() {

				@Override
				public void onResponse(ResponseEvent arg0) {
					
					
				}
			};			
			//get listener
			ResponseListener getListen= new ResponseListener() {
//		    	 final String IP=ip;
		    	
		    	@Override
			public void onResponse(ResponseEvent e) {
		    		if (e.getResponse()!=null) {
			System.out.println(71);
		    			String[] currentOids=oids;
					int indexNumber=Integer.parseInt(e.getResponse().get(0).toString().split(" = ")[1]);
				for(String currentOid: currentOids) {
					String changeOid=currentOid;
					for (int i=0; i<indexNumber;i++) {
						PDU nextpdu = new PDU();
						nextpdu.setType(PDU.GETNEXT);
						nextpdu.setRequestID(new Integer32(1));
						nextpdu.add(new VariableBinding(new OID(changeOid)));
						try {
							ResponseEvent res=snmp.get(nextpdu, target);
							System.out.println(res.getResponse());
						} catch (IOException e1) {
							// TODO Auto-generated catch block
							e1.printStackTrace();
						}
					
					}}
				}}
		    };
			
		    snmp.get(pdu, target,null,getListen);
			
			
			
			
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	}
	
	
	
	
	
	
	
	
	
	
	
}
