package formatChanging;

import java.io.File;
import java.io.PrintWriter;
import java.util.*;
import java.util.Map.Entry;

public class Pivoting {
	ArrayList<String[]> fullData;
	LinkedHashSet<String> staticFields;
	TreeSet<String> headerFields;
	TreeSet<String> headerField;	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Pivoting p = new Pivoting();
		p.read();
		String[] ss= {"sid","cake","bread"};
		p.setStatic(ss);
		p.format();
	}
	
	void read() {
		fullData=new ArrayList<String[]>();
		try {
		File file = new File("F:\\marks1.csv");
		Scanner reader= new Scanner(file);
		while(reader.hasNext()) {
			String [] rows = reader.next().split(",");
			fullData.add(rows);
		}
		reader.close();
		}catch(Exception e) {
			System.out.println(e);
		}
		
		
	}
	void setStatic(String[] ss) {
		staticFields= new LinkedHashSet<String>();
		for(String ssv:ss) {
			staticFields.add(ssv);
		}
		headerFields= new TreeSet<String>();
		for(String s: fullData.get(0)) {
			if(!staticFields.contains(s)) {
				headerFields.add(s);
			}
		}
	}
Map<String,Map<String,Map<String,String>>> student= new TreeMap();
Map<String,Map<String,String>> studSubMark=  new TreeMap();
Map<String,String> staticfield= new TreeMap();
Map<String,String> dynamicfield= new TreeMap();

	void format() {
//				sid:static:{static header: static values}
//					values: {header: values}}]
		
		Iterator<String[]> fdi =fullData.iterator();
		fdi.next();
		while(fdi.hasNext()) {
			String [] rows=fdi.next();
			
			if (!student.containsKey(rows[0])) {
				studSubMark=  new TreeMap();
				staticfield=new TreeMap();
				dynamicfield=new TreeMap();
				student.put(rows[0], studSubMark);
			}
			else {
				studSubMark=  student.get(rows[0]);
				staticfield=studSubMark.get("static");
				dynamicfield=studSubMark.get("dynamic");
			}
			int i=0;
			for(String s:staticFields) {
				staticfield.put(s, rows[i]);
				System.out.println(i);
				i++;
				
				}
			for(String s:headerFields) {
				if(i<rows.length) {
				dynamicfield.put(s, rows[i]);
				System.out.println(rows[i]);
				i++;
				}
			}
			
			student.get(rows[0]).put("static",staticfield);
			student.get(rows[0]).put("dynamic",dynamicfield);
				System.out.println(staticfield);
				System.out.println(dynamicfield);
		System.out.println(student);
		System.out.println(String.join(",",staticFields));
		}	
	}

void reproduce() {
	Iterator<Entry<String, Map<String, Map<String, String>>>> i= student.entrySet().iterator();
	PrintWriter writer;
	
	try {
	 writer = new PrintWriter(new File("F:\\marks2.csv"));

		writer.write(String.join(",",staticFields));
		writer.write("subject,mark");
	while(i.hasNext()) {
		studSubMark=i.next().getValue();
		staticfield=studSubMark.get("static");
		dynamicfield=studSubMark.get("dynamic");
		Iterator<Entry<String, String>>  si =staticfield.entrySet().iterator();
		while(si.hasNext()) {
			writer.write(si.next().getValue());
		}
		Iterator<Entry<String, String>>  di =dynamicfield.entrySet().iterator();
		while(di.hasNext()) {
			
		}
		
		
	}}
	catch(Exception e) {
		System.out.println(e);
	}
}



}
