package MAP;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

public class Hmap {

	public static void main(String[] args) {
		HashMap hm= new HashMap();
		//put(K key, V value)
		//

		hm.put("can", 1);
hm.put("van",2);
hm.put("ban",3);
//putAll(Map<? extends K,? extends V> m)
//
HashMap hm1= new HashMap();
hm1.putAll(hm);;
System.out.println(hm);
hm.put("tan", 4);
System.out.println(hm1.putIfAbsent("can1", 2));
Set s=hm.entrySet();
Iterator i= s.iterator();
System.out.println(i.next());
System.out.println(i.next());
System.out.println(i.next());
//clear()
//
//clone()
//
//compute(K key, BiFunction<? super K, ? super V,? extends V> remappingFunction)
//
//computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)
//
//computeIfPresent(K key, BiFunction<? super K, ? super V,? extends V> remappingFunction)
//
//containsKey(Object key)
//
//containsValue(Object value)
//
//entrySet()
//
//get(Object key)
//
//isEmpty()
//
//keySet()
//
//merge(K key, V value, BiFunction<? super V, ? super V,? extends V> remappingFunction)
//
//remove(Object key)
//
//size()
//
//values()







	}

}
