package checkedEH;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
//import java.util.Date;
import java.sql.Date;

public class LangEH {

	public static void main(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException {
		
		LangEH eh=new LangEH();
//		• ReflectiveOperationException
				eh.roe();
//		• ClassNotFoundException
		eh.cnfe();
//		• InstantiationException
		eh.ie();
//		• IllegalAccessException
		eh.iae();
//		• InvocationTargetException
		eh.ite();
//		• NoSuchFieldException
		eh.nsfe();
//		• NoSuchMethodException
		eh.nsme();
//		• CloneNotSupportedException
		eh.cnse();
//		• InterruptedException
		eh.i_e();
System.out.println("end");
	}

//	• ReflectiveOperationException
	void roe() {
		
	}
//	• ClassNotFoundException
	void cnfe() throws ClassNotFoundException {
		Class.forName("java.lang.String");
		
	}
//	• InstantiationException
	void ie() {
		try {
	         // date object
	         Date d = new Date(1993);
	         Class cls = d.getClass();
	         System.out.println("Time = " + d.toString());

	         /* creates a new instance of the class represented by this 
	            Class object cls */
	         Object obj = cls.newInstance();
	         System.out.println("Time = " + obj);
	      } catch(InstantiationException e) {
	         System.out.println(e.toString());
	      } catch(IllegalAccessException e) {
	         System.out.println(e.toString());
	      }
	}
//	• IllegalAccessException
	void iae() throws InstantiationException, IllegalAccessException {
		LangEH eh= LangEH.class.newInstance();
	}
//	• InvocationTargetException
	void ite() throws InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		LangEH eh= LangEH.class.newInstance();
		Method[] m = eh.getClass().getMethods();
		m[1].invoke(eh);
	}
//	• NoSuchFieldException
	void nsfe() {
		
	}
//	• NoSuchMethodException
	void nsme() {
		
	}
//	• CloneNotSupportedException
	void cnse() {
		
	}
//	• InterruptedException
	void i_e() {
		
	}
	
	
}
